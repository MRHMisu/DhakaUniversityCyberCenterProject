//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CyberCenterClient.CyberCenterServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CyberCenterServices.IClientServices")]
    public interface IClientServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/IsValidUser", ReplyAction="http://tempuri.org/IClientServices/IsValidUserResponse")]
        bool IsValidUser(string CardNumber, string PinNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/IsActive", ReplyAction="http://tempuri.org/IClientServices/IsActiveResponse")]
        bool IsActive(string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/ToBeInActive", ReplyAction="http://tempuri.org/IClientServices/ToBeInActiveResponse")]
        void ToBeInActive(string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/InsertIntoActiveSession", ReplyAction="http://tempuri.org/IClientServices/InsertIntoActiveSessionResponse")]
        void InsertIntoActiveSession(string CardNumber, string PcName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/getCardUsageIdAfterInsertingStartingTime", ReplyAction="http://tempuri.org/IClientServices/getCardUsageIdAfterInsertingStartingTimeRespon" +
            "se")]
        int getCardUsageIdAfterInsertingStartingTime(string CardNumber, string PcName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/getUsingTime", ReplyAction="http://tempuri.org/IClientServices/getUsingTimeResponse")]
        int getUsingTime(string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/UpdateFinishingTime", ReplyAction="http://tempuri.org/IClientServices/UpdateFinishingTimeResponse")]
        void UpdateFinishingTime(int CardUsageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/IsCardExperiedByDate", ReplyAction="http://tempuri.org/IClientServices/IsCardExperiedByDateResponse")]
        bool IsCardExperiedByDate(string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientServices/ViewCardUsage", ReplyAction="http://tempuri.org/IClientServices/ViewCardUsageResponse")]
        System.Data.DataSet ViewCardUsage(string CardNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServicesChannel : CyberCenterClient.CyberCenterServices.IClientServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServicesClient : System.ServiceModel.ClientBase<CyberCenterClient.CyberCenterServices.IClientServices>, CyberCenterClient.CyberCenterServices.IClientServices {
        
        public ClientServicesClient() {
        }
        
        public ClientServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsValidUser(string CardNumber, string PinNumber) {
            return base.Channel.IsValidUser(CardNumber, PinNumber);
        }
        
        public bool IsActive(string CardNumber) {
            return base.Channel.IsActive(CardNumber);
        }
        
        public void ToBeInActive(string CardNumber) {
            base.Channel.ToBeInActive(CardNumber);
        }
        
        public void InsertIntoActiveSession(string CardNumber, string PcName) {
            base.Channel.InsertIntoActiveSession(CardNumber, PcName);
        }
        
        public int getCardUsageIdAfterInsertingStartingTime(string CardNumber, string PcName) {
            return base.Channel.getCardUsageIdAfterInsertingStartingTime(CardNumber, PcName);
        }
        
        public int getUsingTime(string CardNumber) {
            return base.Channel.getUsingTime(CardNumber);
        }
        
        public void UpdateFinishingTime(int CardUsageId) {
            base.Channel.UpdateFinishingTime(CardUsageId);
        }
        
        public bool IsCardExperiedByDate(string CardNumber) {
            return base.Channel.IsCardExperiedByDate(CardNumber);
        }
        
        public System.Data.DataSet ViewCardUsage(string CardNumber) {
            return base.Channel.ViewCardUsage(CardNumber);
        }
    }
}
